@model IEnumerable<StoreFront.DATA.EF.Models.Item>

@{
    ViewData["Title"] = "TiledIndex";
}

<h1>Index</h1>

<p>
    <a class="text-light" asp-action="Create">Create New</a>
</p>
<table class="table text-light">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RequiredLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MaxStackSize)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsUnique)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsSetItem)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsSocketed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rarity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ItemsInStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ItemCategory)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ItemType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Server)
            </th>
           @*  <th>
                @Html.DisplayNameFor(model => model.ItemImage)
            </th> *@
            <th></th>
        </tr>
    </thead>
    <tbody> 
@foreach (var item in Model) {

@* 
    <div class="col-12 col-md-4 col-lg-3 mb-5">
        <a class="product-item" href="#">
            <img src="images/product-1.png" class="img-fluid product-thumbnail">
            <h3 class="product-title">@Html.DisplayFor(modelItem => item.Name)</h3>
            <p class="product-info">Required Level @Html.DisplayFor(modelItem => item.RequiredLevel)</p>
            <strong class="product-price ">$50.00</strong>

            <span class="icon-cross">
                <img src="images/cross.svg" class="img-fluid">
            </span>
        </a>
    </div>
 *@


         <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RequiredLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MaxStackSize)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsUnique)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsSetItem)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsSocketed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rarity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ItemsInStock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ItemCategory.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ItemType.ItemTypeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Server.ModeName)
            </td>
           @*  <td>
                @Html.DisplayNameFor(model => model.ItemImage)
            </td> *@
                <td class= "text-light">
                    <a class="text-light" asp-action="Edit" asp-route-id="@item.ItemId">Edit</a> |
                    <a class="text-light" asp-action="Details" asp-route-id="@item.ItemId">Details</a> |
                    <a class="text-light" asp-action="Delete" asp-route-id="@item.ItemId">Delete</a>
            </td>
        </tr> 
}
     </tbody>
</table>


 @section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
} 